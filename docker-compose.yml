services:
  mongo:
    image: mongo
    restart: always
    volumes:
     - mdbdata:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  elastic:
    image: elasticsearch:8.13.3
    volumes:
      - esdata:/user/share/elasticsearch/data
    environment:
      - ELASTIC_PASSWORD
      - xpack.security.enabled=false
      - discovery.type=single-node

  kibana:
    image: kibana:8.13.3
    ports:
      - 5601:5601

  rabbit:
    image: rabbitmq
    healthcheck:
      test: "rabbitmq-diagnostics -q check_running"
      interval: 10s
      timeout: 30s
      retries: 100

  spring:
    build: awesomemodeling/
    ports:
      - 8080:8080

  worker:
    build: downindex
    depends_on:
      rabbit:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - GUARDIAN_API
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
    deploy:
      mode: replicated
      replicas: 2

  mongoexpress:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD
      - ME_CONFIG_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD
    depends_on:
      - mongo

  front:
    build: front
    ports:
      - 8082:80

volumes:
  esdata:
    driver: local
  mdbdata:
    driver: local
